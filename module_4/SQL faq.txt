/*
Задание 4.1 
База данных содержит список аэропортов практически всех крупных городов России. В большинстве городов есть только один аэропорт. Исключение составляет:
*/
SELECT a.city,
       COUNT(DISTINCT a.airport_code) airport_count
FROM dst_project.airports AS a
GROUP BY a.city
HAVING COUNT(DISTINCT a.airport_code) > 1
ORDER BY 2 DESC,
         1


/*
Задание 4.2
Вопрос 1. Таблица рейсов содержит всю информацию о прошлых, текущих и запланированных рейсах. Сколько всего статусов для рейсов определено в таблице?
*/
SELECT COUNT(DISTINCT f.status) AS status_count
FROM dst_project.flights AS f


/*
Задание 4.2
Вопрос 2. Какое количество самолетов находятся в воздухе на момент среза в базе (статус рейса «самолёт уже вылетел и находится в воздухе»).
*/
SELECT COUNT(f.flight_id)
FROM dst_project.flights AS f
WHERE f.status = 'Departed'


/*
Задание 4.2
Вопрос 3. Места определяют схему салона каждой модели. Сколько мест имеет самолет модели 773 (Boeing 777-300)?
*/
SELECT COUNT(s.seat_no)
FROM dst_project.seats AS s
WHERE s.aircraft_code = '773'


/*
Задание 4.2
Вопрос 4. Сколько состоявшихся (фактических) рейсов было совершено между 1 апреля 2017 года и 1 сентября 2017 года?
Здесь и далее состоявшийся рейс означает, что он не отменён, и самолёт прибыл в пункт назначения.
*/
SELECT COUNT(f.flight_id)
FROM dst_project.flights AS f
WHERE (actual_arrival BETWEEN '2017-04-01' AND '2017-09-01')
  AND (status = 'Arrived')


/*
Задание 4.3 
Вопрос 1. Сколько всего рейсов было отменено по данным базы?
*/
SELECT COUNT(flight_id)
FROM dst_project.flights AS f
WHERE f.status = 'Cancelled'


/*
Задание 4.3 
Вопрос 2. Сколько самолетов моделей типа Boeing, Sukhoi Superjet, Airbus находится в базе авиаперевозок?
*/
SELECT 'Boeing' aircraft,
                COUNT(*)
FROM dst_project.aircrafts AS a
WHERE (a.model LIKE 'Boeing%')
UNION ALL
SELECT 'Sukhoi' aircraft,
                COUNT(*)
FROM dst_project.aircrafts AS a
WHERE (a.model LIKE 'Sukhoi%')
UNION ALL
SELECT 'Airbus' aircraft,
                COUNT(*)
FROM dst_project.aircrafts AS a
WHERE (a.model LIKE 'Airbus%')


/*
Задание 4.3 
Вопрос 3. В какой части (частях) света находится больше аэропортов?
*/
SELECT 'Asia' AS continent,
       count(timezone)
FROM dst_project.airports AS ap
WHERE (ap.timezone LIKE 'Asia%')
UNION ALL
SELECT 'Europe' AS continent,
       count(timezone)
FROM dst_project.airports AS ap
WHERE (ap.timezone LIKE 'Europe%')


/*
Задание 4.3 
Вопрос 4. У какого рейса была самая большая задержка прибытия за все время сбора данных? Введите id рейса (flight_id).
*/ 
SELECT f.flight_id,
       f.actual_arrival - f.scheduled_arrival AS delay
FROM dst_project.flights AS f
WHERE f.actual_arrival IS NOT NULL
ORDER BY delay DESC
LIMIT 1


/*
Задание 4.4
Вопрос 1. Когда был запланирован самый первый вылет, сохраненный в базе данных?
*/
SELECT MIN(f.scheduled_departure)
FROM dst_project.flights AS f


/*
Задание 4.4
Вопрос 2. Сколько минут составляет запланированное время полета в самом длительном рейсе?
*/
SELECT
	MAX(DATE_PART('hour', f.scheduled_arrival - f.scheduled_departure) * 60
    + DATE_PART('minute', f.scheduled_arrival - f.scheduled_departure))
    AS avg_flight_duration
FROM dst_project.flights AS f
WHERE scheduled_departure IS NOT NULL


/*
Задание 4.4
Вопрос 3. Между какими аэропортами пролегает самый длительный по времени запланированный рейс?
*/
SELECT departure_airport,
       arrival_airport,
       f.scheduled_arrival - f.scheduled_departure flight_time
FROM dst_project.flights AS f
ORDER BY 3 DESC
LIMIT 1


/*
Задание 4.4
Вопрос 4. Сколько составляет средняя дальность полета среди всех самолетов в минутах?
Секунды округляются в меньшую сторону (отбрасываются до минут).
*/
SELECT
	ROUND(avg(DATE_PART('hour', f.scheduled_arrival - f.scheduled_departure) * 60
	+ DATE_PART('minute', f.scheduled_arrival - f.scheduled_departure)))
	AS avg_flight_duration
FROM dst_project.flights AS f
WHERE scheduled_departure IS NOT NULL


/*
Задание 4.5
Вопрос 1. Мест какого класса у SU9 больше всего?
*/
SELECT s.fare_conditions,
       count(s.fare_conditions)
FROM dst_project.seats AS s
WHERE s.aircraft_code = 'SU9'
GROUP BY s.fare_conditions


/*
Задание 4.5
Вопрос 2. Какую самую минимальную стоимость составило бронирование за всю историю?
*/
SELECT min(b.total_amount)
FROM dst_project.bookings AS b


/*
Задание 4.5
Вопрос 3. Какой номер места был у пассажира с id = 4313 788533?
*/
SELECT seat_no
FROM dst_project.tickets AS t
LEFT JOIN dst_project.boarding_passes AS bp ON bp.ticket_no = t.ticket_no
WHERE t.passenger_id = '4313 788533'


/*
Задание 5.1
Вопрос 1. Анапа — курортный город на юге России.
Сколько рейсов прибыло в Анапу за 2017 год?
*/
SELECT
	COUNT(f.flight_id)	
FROM 
	dst_project.flights AS f
WHERE
	f.arrival_airport = (
	SELECT distinct a.airport_code
	FROM dst_project.airports AS a
	WHERE a.city = 'Anapa'
	) 
	AND f.status = 'Arrived'
	AND DATE_PART('year', f.actual_arrival) = 2017


/*
Задание 5.1
Вопрос 2. Сколько рейсов из Анапы вылетело зимой 2017 года?
*/
SELECT 
	COUNT(f.flight_id)	
FROM 
	dst_project.flights AS f
WHERE 
	f.departure_airport = (
	SELECT distinct a.airport_code
	FROM dst_project.airports AS a
	WHERE a.city = 'Anapa'
	) 	
	AND DATE_PART('year', f.actual_departure) = 2017
	AND DATE_PART('month', f.actual_departure) IN (1,2,12)


/*
Задание 5.1
Вопрос 3. Посчитайте количество отмененных рейсов из Анапы за все время.
*/
SELECT 
	COUNT(f.flight_id)	
FROM 
	dst_project.flights AS f
WHERE 
	f.departure_airport = (
	SELECT distinct a.airport_code
	FROM dst_project.airports a
	WHERE a.city = 'Anapa'
	) 
	AND f.status = 'Cancelled'


/*
Задание 5.1
Вопрос 4. Сколько рейсов из Анапы не летают в Москву?
*/
SELECT 
	COUNT(f.flight_id)	
FROM 
	dst_project.flights AS f
WHERE 
	f.departure_airport = (
	SELECT distinct a.airport_code
	FROM dst_project.airports AS a
	WHERE a.city = 'Anapa'
	) 
	AND f.arrival_airport NOT IN (
	SELECT DISTINCT a.airport_code
	FROM dst_project.airports a
	WHERE a.city = 'Moscow'
	) 


/*
Задание 5.1
Вопрос 5. Какая модель самолета летящего на рейсах из Анапы имеет больше всего мест?
*/
SELECT 
	DISTINCT f.aircraft_code,
	count(s.seat_no)	
FROM 
	dst_project.flights AS f
	left join dst_project.seats s on f.aircraft_code = s.aircraft_code
WHERE 
	f.departure_airport = (
	SELECT distinct a.airport_code
	FROM dst_project.airports AS a
	WHERE a.city = 'Anapa'
	) 
GROUP BY 
	f.aircraft_code,
	s.seat_no
ORDER BY
	2 desc, 1



/*
6. Переходим к реальной аналитике
Ваш датасет должен обязательно включать id рейса и города вылета (Анапа) и прилета. 
Он также  может включать такие данные, как модель самолёта и его характеристики,
суммарную стоимость всех билетов на рейсе,
затраченное время в полёте и прочее — на ваше усмотрение.
*/
SELECT 
    f.flight_id,
    'Anapa' AS city_departure,
	ap.city AS city_arrival,
	ac.model,
	ac.range,
	SUM(tf.amount) AS total_cost_of_tickets,
	(DATE_PART('hour', f.actual_arrival - f.actual_departure) * 60
    + DATE_PART('minute', f.actual_arrival - f.actual_departure))
    AS flight_duration_minutes,
	f.scheduled_departure,
	COUNT(tf.ticket_no) AS number_of_tickets,
	cb.n_busines, -- count of busines class seats sold
	tcb.common_n_b_class_seats, -- common count of busines class seats
	ce.n_economy, -- count of economy class seats sold
	tce.common_n_e_class_seats,-- common count of economy class seats
	f.actual_departure - f.scheduled_departure AS flight_delay
FROM
    dst_project.flights AS f
        LEFT JOIN dst_project.airports AS ap ON f.arrival_airport = ap.airport_code
		LEFT JOIN dst_project.aircrafts AS ac ON f.aircraft_code = ac.aircraft_code
		LEFT JOIN dst_project.ticket_flights AS tf ON f.flight_id = tf.flight_id
		LEFT JOIN (
			SELECT 
	 			f.flight_id,
	 			count(tf.fare_conditions) AS n_busines,
	 			f.aircraft_code
			FROM
				dst_project.flights AS f
					LEFT JOIN dst_project.ticket_flights tf ON f.flight_id = tf.flight_id
			WHERE 
				f.departure_airport = 'AAQ'
				AND (date_trunc('month', f.scheduled_departure) IN ('2017-01-01','2017-02-01', '2017-12-01'))
				AND f.status NOT IN ('Cancelled')
				AND tf.fare_conditions = ('Business')
			GROUP BY
				f.flight_id,
				f.aircraft_code
			ORDER BY 
				f.flight_id
			) AS cb ON f.flight_id = cb.flight_id
		LEFT JOIN (
			SELECT 
	 			f.flight_id,
	 			count(tf.fare_conditions) AS n_economy,
	 			f.aircraft_code
			FROM
				dst_project.flights AS f
					LEFT JOIN dst_project.ticket_flights tf ON f.flight_id = tf.flight_id
			WHERE 
				f.departure_airport = 'AAQ'
				AND (date_trunc('month', f.scheduled_departure) IN ('2017-01-01','2017-02-01', '2017-12-01'))
				AND f.status NOT IN ('Cancelled')
				AND tf.fare_conditions = ('Economy')
			GROUP BY
				f.flight_id,
				f.aircraft_code
			ORDER BY 
				f.flight_id
			) AS ce ON f.flight_id = ce.flight_id
		LEFT JOIN (
			SELECT 
	 			f.flight_id,
		 		f.aircraft_code,
	 			COUNT(s.fare_conditions) AS common_n_b_class_seats 
			FROM
				dst_project.flights AS f
					LEFT JOIN dst_project.seats AS s ON f.aircraft_code = s.aircraft_code
			WHERE 
				f.departure_airport = 'AAQ'
				AND (date_trunc('month', f.scheduled_departure) IN ('2017-01-01','2017-02-01', '2017-12-01'))
				AND f.status NOT IN ('Cancelled')
				AND s.fare_conditions = ('Business')
			GROUP BY
				f.flight_id,
				f.aircraft_code
			ORDER BY 
				f.flight_id
			) AS tcb ON f.flight_id = tcb.flight_id
		LEFT JOIN (
			SELECT 
	 			f.flight_id,
		 		f.aircraft_code,
	 			COUNT(s.fare_conditions) AS common_n_e_class_seats 
			FROM
				dst_project.flights AS f
					LEFT JOIN dst_project.seats AS s ON f.aircraft_code = s.aircraft_code
			WHERE 
				f.departure_airport = 'AAQ'
				AND (date_trunc('month', f.scheduled_departure) IN ('2017-01-01','2017-02-01', '2017-12-01'))
				AND f.status NOT IN ('Cancelled')
				AND s.fare_conditions = ('Economy')
			GROUP BY
				f.flight_id,
				f.aircraft_code
			ORDER BY 
				f.flight_id
			) AS tce ON f.flight_id = tce.flight_id
WHERE 
	f.departure_airport = 'AAQ'
	AND (date_trunc('month', f.scheduled_departure) IN ('2017-01-01','2017-02-01', '2017-12-01'))
	AND f.status NOT IN ('Cancelled')
GROUP BY
    f.flight_id, 
	ap.city,
	ac.model,
	ac.range,
	cb.n_busines,
	ce.n_economy,
	tcb.common_n_b_class_seats,
	tce.common_n_e_class_seats
